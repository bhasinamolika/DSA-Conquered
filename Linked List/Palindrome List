Given a singly linked list, determine if its a palindrome. Return 1 or 0 denoting if its a palindrome or not, respectively.

Notes:

Expected solution is linear in time and constant in space.
For example,

List 1-->2-->1 is a palindrome.
List 1-->2-->3 is not a palindrome.
SOLUTION:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

ListNode * reverse(ListNode * head)

{


  if(!head or !head->next)
    return head;
    ListNode * temp=reverse(head->next);
     head->next->next=head;
     head->next=NULL;
     
     return temp;

}

int Solution::lPalin(ListNode* head) {


  if(!head or !head->next)
  return 1;
  
  ListNode *p=head,*slow=head,*fast=head;
  while(fast->next!=NULL and fast->next->next !=NULL)
  {
      slow=slow->next;
      fast=fast->next->next;
  }
  ListNode *newnode=slow->next;
  slow->next=NULL;
  ListNode *rev=reverse(newnode);
  
  while(p and rev)
  {
      if(p->val !=rev->val)
      return 0;
      
      p=p->next;
      rev=rev->next;
  }
  if(p==NULL or rev==NULL)
  return 1;

}
